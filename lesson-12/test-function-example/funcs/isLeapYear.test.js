const isLeapYear = require("./isLeapYear");

/*
1. Получает 1 аргумент - год в виде целого числа.
2. Возвращает true, если год высокосный, и false - если невысокосный.
3. Если функция получает недопустимые данные, то выбрасывает ошибку с 
текстом, описывающим ошибку.

- год делиться без остатка на 4;
- если год делиться без остатка на 100 - не высокосный;
- если год делиться без остатка на 400 - высокосный;
- не может быть меньше 42;

2008 - true
2003 - false
1900 - false
2000 - true

2008.4 - ошибка с текстом "Год должен быть целым числом";
41 - ошибка с текстом "Год должен быть 42 или больше";
() - ошибка с текстом "Нужно передать аргумент - целое число больше 41";
"2008" - ошибка с текстом "Аргумент должен быть числом"
null - ошибка с текстом "Аргумент должен быть числом"
false - ошибка с текстом "Аргумент должен быть числом"
true - ошибка с текстом "Аргумент должен быть числом"
{} - ошибка с текстом "Аргумент должен быть числом"
[] - ошибка с текстом "Аргумент должен быть числом"
()=> {} - ошибка с текстом "Аргумент должен быть числом"
*/

describe("test isLeapYear function", ()=>{
    // beforeAll(()=> console.log("Перед всеми тестами"));
    // afterAll(()=> console.log("После всех тестов"));
    // beforeEach(()=> console.log("Перед каждым тестом"));
    // afterEach(()=> console.log("После каждого теста"));

    test("2008 - true", ()=>{
        expect(isLeapYear(2008)).toBe(true);
        /*
        const result = isLeapYear(2008);
        const checkObj = expect(result);
        checkObj.toBe(true); 
        if(result === true){
            return true
        }
        return "Test fail"
        */
    });

    it("2003 - false", ()=> {
        expect(isLeapYear(2003)).toBe(false);
    });

    test("1900 - false", ()=> {
        expect(isLeapYear(1900)).toBe(false);
    });

    test("2000 - true", ()=> {
        expect(isLeapYear(2000)).toBe(true);
    });

    test("2008.4 - error 'Год должен быть целым числом'", ()=> {
        expect(()=>isLeapYear(2008.4)).toThrow("Год должен быть целым числом");
    });

    test("41 - error 'Год должен быть 42 или больше'", ()=> {
        expect(()=>isLeapYear(41)).toThrow("Год должен быть 42 или больше");
    });

    test("() - error 'Нужно передать аргумент - целое число больше 41'", ()=> {
        expect(()=>isLeapYear()).toThrow("Нужно передать аргумент - целое число больше 41");
    });

    test("'2008' - error 'Аргумент должен быть числом'", ()=> {
        expect(()=>isLeapYear('2008')).toThrow("Аргумент должен быть числом");
    });

    test("null - error 'Аргумент должен быть числом'", ()=> {
        expect(()=>isLeapYear(null)).toThrow("Аргумент должен быть числом");
    });

    test("false - error 'Аргумент должен быть числом'", ()=> {
        expect(()=>isLeapYear(false)).toThrow("Аргумент должен быть числом");
    });

    test("true - error 'Аргумент должен быть числом'", ()=> {
        expect(()=>isLeapYear(true)).toThrow("Аргумент должен быть числом");
    });

    test("()=>{} - error 'Аргумент должен быть числом'", ()=> {
        expect(()=>isLeapYear(()=>{})).toThrow("Аргумент должен быть числом");
    });

    test("{} - error 'Аргумент должен быть числом'", ()=> {
        expect(()=>isLeapYear({})).toThrow("Аргумент должен быть числом");
    });

    test("[] - error 'Аргумент должен быть числом'", ()=> {
        expect(()=>isLeapYear([])).toThrow("Аргумент должен быть числом");
    });
});